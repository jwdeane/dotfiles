# fgit - Fuzzy Git File Explorer
#
# This function provides an interactive interface for browsing and previewing all files
# tracked by Git in the current repository. It uses fzf with rich styling and multiple
# information panels to give you detailed insights about each file.
# ref: https://junegunn.github.io/fzf/releases/0.63.0/
#
# Usage:
#   fgit
#
# Features:
# - Fuzzy search through all Git-tracked files
# - Live preview of file contents with syntax highlighting (via bat/fzf-preview.sh)
# - File type detection in header
# - MD5, SHA1, and SHA256 hash calculations in footer
# - Dynamic labels showing match counts and current selection
# - Ctrl+R to reload the file list
# - Styled borders and color-coded panels
#
# Key Bindings:
# - Type: Filter files by name/path
# - ↑/↓: Navigate through results
# - Enter: Select file (returns filename)
# - Ctrl+R: Reload Git file list
# - Esc/Ctrl+C: Exit without selection
#
# Dependencies:
# - git: Version control system
# - fzf: Fuzzy finder tool
# - file: File type detection utility
# - md5sum, sha1sum, sha256sum: Hash calculation utilities
# - bat or fzf-preview.sh: File content preview
#
# Note: Uses Catppuccin Mocha theme for bat syntax highlighting
fgit() {
  git ls-files | fzf --style full --scheme path \
    --border --padding 1,2 \
    --ghost 'Type in your query' \
    --border-label ' Demo ' --input-label ' Input ' --header-label ' File Type ' \
    --footer-label ' MD5 Hash ' \
    --preview 'BAT_THEME="Catppuccin Mocha" fzf-preview.sh {}' \
    --bind 'result:bg-transform-list-label:
            if [[ -z $FZF_QUERY ]]; then
            echo " $FZF_MATCH_COUNT items "
            else
            echo " $FZF_MATCH_COUNT matches for [$FZF_QUERY] "
            fi
            ' \
    --bind 'focus:bg-transform-preview-label:[[ -n {} ]] && printf " Previewing [%s] " {}' \
    --bind 'focus:+bg-transform-header:[[ -n {} ]] && file --brief {}' \
    --bind 'focus:+bg-transform-footer:if [[ -n {} ]]; then
                echo "MD5:    $(md5sum < {})"
                echo "SHA1:   $(sha1sum < {})"
                echo "SHA256: $(sha256sum < {})"
                fi' \
    --bind 'ctrl-r:change-list-label( Reloading the list )+reload(sleep 2; git ls-files)' \
    --color 'border:#aaaaaa,label:#cccccc' \
    --color 'preview-border:#9999cc,preview-label:#ccccff' \
    --color 'list-border:#669966,list-label:#99cc99' \
    --color 'input-border:#996666,input-label:#ffcccc' \
    --color 'header-border:#6699cc,header-label:#99ccff' \
    --color 'footer:#ccbbaa,footer-border:#cc9966,footer-label:#cc9966'
}
